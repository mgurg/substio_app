from collections.abc import Sequence
from typing import Protocol
from uuid import UUID

from app.database.models.models import City, Place


class CityRepoProtocol(Protocol):
    async def get_by_uuid(self, uuid: UUID) -> City: ...
    async def find_by_teryt(self, teryt: str) -> City | None: ...
    async def get_by_partial_name(self, name: str) -> Sequence[City]: ...
    async def create(self, **kwargs): ...


class PlaceRepoProtocol(Protocol):
    async def get_by_uuid(self, uuid: UUID) -> Place: ...
    async def get_by_name_and_distance(self, name: str, lat: float, lon: float, meters: int): ...
    async def get_by_partial_name(self, name: str, place_type: str | None = None) -> Sequence[Place]: ...
    async def create(self, **kwargs): ...
